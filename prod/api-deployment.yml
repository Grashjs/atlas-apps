---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlas-api
  namespace: atlas
spec:
  replicas: 1
  selector:
    matchLabels:
      app: atlas
  template:
    metadata:
      labels:
        app: atlas
    spec:
      containers:
      - name: atlas-api
        image: intelloop/atlas-cmms-backend
        ports:
        - containerPort: 8080
        env:
        - name: CLOUD_VERSION
          valueFrom:
            secretKeyRef:
              key: CLOUD_VERSION
              name: api-credentials
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              key: DB_PWD
              name: api-credentials
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              key: DB_URL
              name: api-credentials
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: DB_USER
              name: api-credentials
        - name: ENABLE_EMAIL_NOTIFICATIONS
          valueFrom:
            secretKeyRef:
              key: ENABLE_EMAIL_NOTIFICATIONS
              name: api-credentials
        - name: ENABLE_SSO
          valueFrom:
            secretKeyRef:
              key: ENABLE_SSO
              name: api-credentials
        - name: FASTSPRING_PWD
          valueFrom:
            secretKeyRef:
              key: FASTSPRING_PWD
              name: api-credentials
        - name: FASTSPRING_USER
          valueFrom:
            secretKeyRef:
              key: FASTSPRING_USER
              name: api-credentials
        - name: GCP_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: GCP_BUCKET_NAME
              name: api-credentials
        - name: GCP_JSON
          valueFrom:
            secretKeyRef:
              key: GCP_JSON
              name: api-credentials
        - name: GCP_PROJECT_ID
          valueFrom:
            secretKeyRef:
              key: GCP_PROJECT_ID
              name: api-credentials
        - name: INVITATION_VIA_EMAIL
          valueFrom:
            secretKeyRef:
              key: INVITATION_VIA_EMAIL
              name: api-credentials
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: JWT_SECRET_KEY
              name: api-credentials
        - name: LICENSE_FINGERPRINT_REQUIRED
          valueFrom:
            secretKeyRef:
              key: LICENSE_FINGERPRINT_REQUIRED
              name: api-credentials
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: LICENSE_KEY
              name: api-credentials
        - name: MAIL_RECIPIENTS
          valueFrom:
            secretKeyRef:
              key: MAIL_RECIPIENTS
              name: api-credentials
        - name: OAUTH2_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: OAUTH2_CLIENT_ID
              name: api-credentials
        - name: OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: OAUTH2_CLIENT_SECRET
              name: api-credentials
        - name: OAUTH2_PROVIDER
          valueFrom:
            secretKeyRef:
              key: OAUTH2_PROVIDER
              name: api-credentials
        - name: PUBLIC_API_URL
          valueFrom:
            secretKeyRef:
              key: PUBLIC_API_URL
              name: api-credentials
        - name: PUBLIC_FRONT_URL
          valueFrom:
            secretKeyRef:
              key: PUBLIC_FRONT_URL
              name: api-credentials
        - name: SMTP_PWD
          valueFrom:
            secretKeyRef:
              key: SMTP_PWD
              name: api-credentials
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              key: SMTP_USER
              name: api-credentials
        - name: STORAGE_TYPE
          valueFrom:
            secretKeyRef:
              key: STORAGE_TYPE
              name: api-credentials
        - name: LOGO_PATHS
          valueFrom:
            secretKeyRef:
              key: LOGO_PATHS
              name: api-credentials 
        resources:
          #limits:
            #cpu: "4"
            #memory: "8Gi"
          requests:
            cpu: "1"
            memory: "2Gi"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
---
apiVersion: v1
kind: Service
metadata:
  name:  atlas
  namespace: atlas
spec:
  selector:
    app: atlas
  type:  ClusterIP
  ports:
  - name:  http
    port:  8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: atlas
  namespace: atlas
spec:
  rules:
  - host: "api.atlas-cmms.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: atlas
            port:
              number: 8080
